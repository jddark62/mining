# -*- coding: utf-8 -*-
"""Data Mining.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XU_mKV0cMk7EPLTW8YtxSvk4y6ZRXB-H
"""

import os

path="/content/drive/MyDrive/Classroom/20XT87 - Data Mining Laboratory 2021-26 Batch-8th Sem TCS/"
files= os.listdir(path)

"""[Introductory](https://classroom.google.com/c/NzIxOTg2MzYxODE5/m/NzM4NzAzNTY2Njc2/details)

"""

curr="Introductory Problems 1/"
currpath=path+curr
os.listdir(currpath)

"""Use the Automobile spare.csv contains the data of the number of automobile spares sold in
hundreds during 60 days in an area of a city:


*   What is the maximum number of spares sold? And on how many days the maximum
sales have been achieved?

"""

import numpy as np
import pandas as pd
auto=pd.read_csv(currpath+'Automobile spare.csv',header=None)
auto=auto.T
maxspares=auto.max()
freq=auto.value_counts()
print("Maximum number of spares sold : ", maxspares[0]*100)
print("Number of days maximum sales has been achieved: ",freq[maxspares[0]])

"""* Find the number of days having no sales."""

print("Number of days no sales has been achieved: ",freq[0])

"""* How many spares have been sold during the first half, i.e. first 30 days and second
half of the period and which half produced the highest sales?
"""

print("Sales during first half : ",auto[:30].sum()[0])
print("Sales during second half : ",auto[30:].sum()[0])
if auto[:30].sum()[0]>auto[30:].sum()[0]:
  print("First half produced highest sales")
else:
  print("Second half produced highest sales")

"""* In each half, what is the maximum sales achieved?"""

firstmax=auto[:30].max()[0]
secondmax=auto[30:].max()[0]
print("Maximum sales during first half : ",firstmax)
print("Maximum sales during second half : ",secondmax)

"""Suppose that the data for analysis includes the attribute age. The age values for the data
tuples are 13, 40, 45, 16, 22, 25, 25, 22, 25, 25, 30, 52, 70, 33, 35, 15, 35, 36, 33, 16, 19,
20, 35, 35, 46, 20, 21.

* What is the mean of the data? What is the median?
"""

age=[13, 40, 45, 16, 22, 25, 25, 22, 25, 25, 30, 52, 70, 33, 35, 15, 35, 36, 33, 16, 19, 20, 35, 35, 46, 20, 21]
print("Mean of the data : ",np.mean(age))
print("Median of the data : ",np.median(age))

"""* What is the mode of the data?"""

print("Mode of the data : ",np.bincount(age).argmax())

"""* What is the midrange of the data?"""

import builtins
print("Midrange of the data : ",(builtins.max(age)-builtins.min(age))/2)

"""* Find the first quartile (Q1) and the third quartile (Q3) of the data."""

print("First quartile of the data : ",np.quantile(age,0.25))
print("Third quartile of the data : ",np.quantile(age,0.75))

"""* Draw a boxplot of the data."""

import matplotlib.pyplot as plt
plt.boxplot(age)
plt.show()

"""Use the 2015_16_Statewise_Secondary.csv dataset and do the following. Do the following: ∙

● What is the size of the dataset?
"""

sts = pd.read_csv(currpath+'2015_16_Statewise_Secondary.csv')
sts.shape

"""* Are there missing values in the dataset? If yes, on which attributes?"""

nulls=sts.isnull().sum()
if len(nulls[nulls>0]):
  print("Yes there are missing values in the dataset")
  print(list(nulls[nulls>0].index))
else:
  print("No there are no missing values in the dataset")
schools=['sch_1','sch_2','sch_3','sch_4','sch_5','sch_6','sch_7']

"""* How many states are listed in the dataset?"""

sts.shape[0]

"""* How many categories of schools are included in the dataset? List
them.
"""

schools

"""* How much percentage of schools have single teacher in secondary
level?
"""

10.26

"""* Which state(s) possess the highest and lowest literacy rate?"""

maxst=sts['literacy_rate'].max()
print("Highest literacy rate : ",maxst)
print("States with highest literacy rate : ", sts[sts['literacy_rate']==maxst]['statname'])
minst=sts['literacy_rate'].min()
print("Lowest literacy rate : ",minst)
print("States with lowest literacy rate : ", sts[sts['literacy_rate']==minst]['statname'])

"""[Data Visualizations and Interpretation - Part 1](https://drive.google.com/file/d/16TAVwuEejW1ePer_dn-2yEgsR78qT5Xa/view?usp=sharing)

Generate the
following plots on the variable age and write your interpretations.
* Histogram
"""

import seaborn as sb
sb.histplot(age,bins=10)
plt.title('Histogram plot of age')

"""* Boxplot"""

sb.boxplot(age)
plt.title('Boxplot of age')

"""* Piechart"""

plt.rcParams['figure.figsize'] = (12, 12)
plt.title('Piechart of age')
plt.pie(age,labels=age,autopct='%1.1f%%')
plt.show()

"""Use the Iris dataset provided. Generate the plots as given below:
* Scatter plots based on the feature sepal width and sepal length
"""

iris=pd.read_csv(currpath+'iris.csv',header=None)
dict={0:'Sepal Width',1:'Sepal Length',2:'Petal Width',3:'Petal Length',4:'Category'}
iris.rename(columns=dict,
          inplace=True)
sb.scatterplot(x='Sepal Width',y='Sepal Length',hue='Category',data=iris)
plt.title('Scatter plots based on the feature sepal width and sepal length')
plt.show()

"""* Compare the petal length of various species"""

sb.swarmplot(x='Petal Length',y='Category',data=iris,hue='Category')
plt.title('Swarm plot for petal length')
plt.show()

"""* Create swarm plots for petal width and sepal width and interpret the following:


1.   What is the spread or the range of the measurements? - 1 to 76.9
2.   Identify the sepal and petal width having the highest frequency - Iris Versicolor
"""

sb.swarmplot(x='Petal Width',y='Sepal Width',hue='Category',data=iris)
plt.title('Swarm plot for petal width')
plt.show()

"""Generate swarm plot based on sepal length according to various categories of the species"""

sb.swarmplot(x='Sepal Length',y='Category',data=iris,hue='Category')
plt.title('Swarm plot for sepal length')
plt.show()

"""Compare the histogram and density plots for sepal width - Can interpret that sepal width is normally distributed"""

sb.histplot(iris['Sepal Width'],bins=10)
plt.title('Histogram plot for sepal width')
plt.show()
sb.kdeplot(iris['Sepal Width'])
plt.title('Density plot for sepal width')

"""Plot the box plots of all the features, excluding the class, in a single frame"""

sb.boxplot(x='Category',y='Sepal Width',data=iris)
sb.boxplot(x='Category',y='Sepal Length',data=iris)
sb.boxplot(x='Category',y='Petal Width',data=iris)
sb.boxplot(x='Category',y='Petal Length',data=iris)
plt.title('Box plots of all the features, excluding the class')

"""Analyse the distribution shape of the petal length using voilin plot"""

labels=['Iris-setosa','Iris-versicolor','Iris-virginica']
sb.violinplot(x='Category',y='Petal Length',hue='Category',data=iris)
plt.title('Violin plot for petal length')
plt.legend(labels)

"""[Problem Sheet 3](https://drive.google.com/drive/folders/1WvfHC3CmGxf1n-xjST0uM2UofQs2weisxX42E10snjngVrMoz8rVoJjx82__SJD_CfCQ63r5)"""

!pip install ucimlrepo
from ucimlrepo import fetch_ucirepo


credit_approval = fetch_ucirepo(id=27)

creddeets=pd.DataFrame(data=credit_approval.data.features)
credit_approval.metadata

"""* Identify the types of the attribute in the above dataset."""

creddeets.info()

"""* Analyze the spread and distribution of all the numerical attributes."""

creddeets.describe()

"""* Create scatter plots of all possible combinations of numerical attributes in the given
dataset. Interpret the scatter plots.
"""

sb.pairplot(creddeets)

"""Does the scatter plot project the distribution of the attribute values?"""
